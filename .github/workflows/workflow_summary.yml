name: Workflow Status Alert

on:
  workflow_run:
    workflows: ["*"]
    types:
      - completed

concurrency:
  group: workflow-status-${{ github.event.workflow_run.head_sha }}-${{ github.event.workflow_run.workflow_id }}
  cancel-in-progress: true

jobs:
  check-and-notify:
    runs-on: ubuntu-latest
    # Only for PR events, skip this notifier itself, and notify only on true failures
    if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.name != 'Workflow Status Alert' && github.event.workflow_run.conclusion == 'failure'
    steps:
      - name: Debounce multiple workflow completion events
        run: sleep 20

      - name: Get PR information
        id: pr_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get PR number from the workflow run
          pr_number=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "${{ github.event.workflow_run.pull_requests[0].url }}" \
            | jq -r '.number')
          
          if [ -z "$pr_number" ] || [ "$pr_number" = "null" ]; then
            echo "No PR found, exiting"
            echo "HAS_PR=false" >> $GITHUB_ENV
            exit 0
          fi
          
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
          echo "HAS_PR=true" >> $GITHUB_ENV
          echo "HEAD_SHA=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV

      - name: Capture completed workflow details
        if: env.HAS_PR == 'true'
        id: workflow_status
        run: |
          echo "WF_NAME=${{ github.event.workflow_run.name }}" >> $GITHUB_ENV
          echo "WF_CONCLUSION=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_ENV
          echo "WF_STATUS=${{ github.event.workflow_run.status }}" >> $GITHUB_ENV
          echo "WF_URL=${{ github.event.workflow_run.html_url }}" >> $GITHUB_ENV
          echo "WF_RUN_ID=${{ github.event.workflow_run.id }}" >> $GITHUB_ENV

      - name: Get PR details
        if: env.HAS_PR == 'true'
        id: pr_details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_data=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.PR_NUMBER }}")
          
          pr_title=$(echo "$pr_data" | jq -r '.title')
          pr_url=$(echo "$pr_data" | jq -r '.html_url')
          pr_author=$(echo "$pr_data" | jq -r '.user.login')
          
          echo "PR_TITLE=$pr_title" >> $GITHUB_ENV
          echo "PR_URL=$pr_url" >> $GITHUB_ENV
          echo "PR_AUTHOR=$pr_author" >> $GITHUB_ENV

      - name: Prepare Slack text blocks
        if: env.HAS_PR == 'true'
        run: |
          short_sha=$(echo "${HEAD_SHA}" | cut -c1-7)
          pr_field="*PR #${PR_NUMBER}:* ${PR_TITLE}"
          author_field="*Author:* @${PR_AUTHOR}"
          commit_field="*Commit:* \`${short_sha}\`"
          case "${WF_CONCLUSION}" in
            success) status_emoji="✅"; status_word="Passed" ;;
            failure) status_emoji="❌"; status_word="Failed" ;;
            cancelled) status_emoji="⏹️"; status_word="Cancelled" ;;
            skipped) status_emoji="⏭️"; status_word="Skipped" ;;
            *) status_emoji="⚠️"; status_word="${WF_CONCLUSION}" ;;
          esac
          workflow_field="*Workflow:* ${WF_NAME}"
          status_field="*Status:* ${status_emoji} ${status_word}"
          run_line="*Run:* <${WF_URL}|View run>"
          echo "PR_FIELD=$pr_field" >> $GITHUB_ENV
          echo "AUTHOR_FIELD=$author_field" >> $GITHUB_ENV
          echo "COMMIT_FIELD=$commit_field" >> $GITHUB_ENV
          echo "WORKFLOW_FIELD=$workflow_field" >> $GITHUB_ENV
          echo "STATUS_FIELD=$status_field" >> $GITHUB_ENV
          echo "RUN_LINE=$run_line" >> $GITHUB_ENV

      - name: Ensure this is the latest run for this workflow and commit
        if: env.HAS_PR == 'true'
        id: latest_guard
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          api_url="https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ github.event.workflow_run.workflow_id }}/runs?event=pull_request&per_page=50"
          latest_id=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" "$api_url" \
            | jq -r --arg sha "${HEAD_SHA}" '
                .workflow_runs
                | map(select(.head_sha == $sha))
                | sort_by(.created_at)
                | last
                | .id')
          if [ "$latest_id" = "${WF_RUN_ID}" ]; then
            echo "IS_LATEST=true" >> $GITHUB_ENV
          else
            echo "IS_LATEST=false" >> $GITHUB_ENV
          fi

      - name: Send Slack Summary
        if: env.HAS_PR == 'true' && env.IS_LATEST == 'true'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: C09KZ76KY0G   # test-channel
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "BE - Workflow Failed: ${{ env.WF_NAME }}",
                    "emoji": true
                  }
                },
                { "type": "divider" },
                { "type": "section", "fields": [
                  { "type": "mrkdwn", "text": ${{ toJson(env.PR_FIELD) }} },
                  { "type": "mrkdwn", "text": ${{ toJson(env.AUTHOR_FIELD) }} },
                  { "type": "mrkdwn", "text": ${{ toJson(env.COMMIT_FIELD) }} }
                ]},
                { "type": "section", "fields": [
                  { "type": "mrkdwn", "text": ${{ toJson(env.WORKFLOW_FIELD) }} },
                  { "type": "mrkdwn", "text": ${{ toJson(env.STATUS_FIELD) }} }
                ]},
                { "type": "divider" },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJson(env.RUN_LINE) }}
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Open Run",
                        "emoji": true
                      },
                      "url": "${{ env.WF_URL }}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View PR",
                        "emoji": true
                      },
                      "url": "${{ env.PR_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_PR_ALERT_BOT_TOKEN }}

